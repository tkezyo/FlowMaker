<rxui:ReactiveUserControl x:Class="Test1.Views.FlowMakerListView"
                          xmlns:rxui="http://reactiveui.net"
                              xmlns:vms="clr-namespace:Test1.ViewModels"
                          x:TypeArguments="vms:FlowMakerListViewModel"
             
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                           xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:Test1.Views" d:DataContext="{d:DesignInstance Type=vms:FlowMakerListViewModel}"
                          xmlns:s="clr-namespace:System;assembly=mscorlib"
                          xmlns:app="clr-namespace:FlowMaker;assembly=FlowMaker.WPFBase" xmlns:converters="clr-namespace:Test1.Converters"
                          x:Name="page"
                          mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:SpikeDeleteBoxConverter x:Key="spikeDeleteBoxConverter"/>
        <converters:SpikeDeleteActionConverter x:Key="spikeDeleteActionConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu ItemsSource="{Binding Menus}">
            <Menu.ItemContainerStyle>
                <Style TargetType="MenuItem" BasedOn="{StaticResource  MenuItemBaseStyle}">
                    <Setter Property="Command"  Value="{Binding Command}"/>
                    <Setter Property="CommandParameter"  Value="{Binding CommandParameter}"/>
                </Style>
            </Menu.ItemContainerStyle>
            <Menu.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="Header" Grid.Column="1" 
                        VerticalAlignment="Center"
                        Text="{Binding Name}" />
                    </Grid>
                </HierarchicalDataTemplate>
            </Menu.ItemTemplate>
        </Menu>

        <DataGrid 
              Visibility="{Binding ShowFlowList,Converter={StaticResource Boolean2VisibilityConverter}}"
  Grid.Row="1"  ItemsSource="{Binding FlowMenus}" AutoGenerateColumns="False" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTextColumn Header="类别" Binding="{Binding Category}"></DataGridTextColumn>
                <DataGridTextColumn Header="名称" Binding="{Binding Name}"></DataGridTextColumn>
                <DataGridTextColumn Header="创建时间" Binding="{Binding CreationTime,StringFormat={}{0:yyyy-MM-dd}}"></DataGridTextColumn>
                <DataGridTextColumn Header="修改时间" Binding="{Binding ModifyTime,StringFormat={}{0:yyyy-MM-dd HH:mm}}"></DataGridTextColumn>
                <DataGridTemplateColumn Header="操作">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding DataContext.ConfigCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">配置</Button>
                                <Button Command="{Binding DataContext.CreateCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">编辑</Button>
                                <Button Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">删除</Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid Grid.Row="1" 
                      Visibility="{Binding ShowConfigList,Converter={StaticResource Boolean2VisibilityConverter}}" ItemsSource="{Binding ConfigMenus}" AutoGenerateColumns="False" IsReadOnly="False">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="菜单栏" Binding="{Binding ShowInMenu,UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="配置类别" Binding="{Binding Category}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="配置名称" Binding="{Binding Name}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="类别" Binding="{Binding FlowCategory}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="名称" Binding="{Binding FlowName}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="创建时间" Binding="{Binding CreationTime,StringFormat={}{0:yyyy-MM-dd}}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="修改时间" Binding="{Binding ModifyTime,StringFormat={}{0:yyyy-MM-dd HH:mm}}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTemplateColumn Header="操作">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding DataContext.RunCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">运行</Button>
                                <Button Command="{Binding DataContext.RunCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">运行</Button>
                                <Button Command="{Binding DataContext.EditConfigCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">复制</Button>
                                <Button Command="{Binding DataContext.RemoveConfigCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">删除</Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>


        <ItemsControl ItemsSource="{Binding ConfigMenus}"  Grid.Row="1" Visibility="{Binding ShowMonitor,Converter={StaticResource Boolean2VisibilityConverter}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="9" Rows="1"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock>123</TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <TabControl Grid.Row="1"  ItemsSource="{Binding Tabs}" x:Name="tab"
               Visibility="{Binding ShowHome,Converter={StaticResource Boolean2VisibilityConverter}}"
        
                 HorizontalContentAlignment="Center" TabStripPlacement="Left" SelectedItem="{Binding CurrentTab}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"></TextBlock>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding Boxs}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Grid.Row" Value="{Binding Size.Top}" />
                                <Setter Property="Grid.Column" Value="{Binding Size.Left}" />
                                <Setter Property="Grid.ColumnSpan" Value="{Binding Size.Width}" />
                                <Setter Property="Grid.RowSpan" Value="{Binding Size.Height}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <GroupBox Margin="4">
                                    <GroupBox.Style>
                                        <Style TargetType="GroupBox" BasedOn="{StaticResource GroupBoxTab.Small}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Editing}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Blue"/>
                                                    <Setter  Property="BorderThickness" Value="1"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GroupBox.Style>
                                    <GroupBox.Header>
                                        <Button  Command="{Binding DataContext.SelectBoxCommand,ElementName=page}" IsEnabled="{Binding DataContext.Edit,ElementName=page}" Style="{StaticResource ButtonCustom}" Content="{Binding Name}"  CommandParameter="{Binding .}" >
                                        </Button>
                                    </GroupBox.Header>
                                    <Grid>
                                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Visibility="{Binding ShowView,Converter={StaticResource Boolean2VisibilityReConverter}}">
                                                <ItemsControl ItemsSource="{Binding Actions}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" ></WrapPanel>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" Name="BoxBorder" BorderThickness="1" CornerRadius="5" Background="Transparent">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding DataContext.Edit,ElementName=page}">
                                                                                <DataTrigger.Value>
                                                                                    <s:Boolean>True</s:Boolean>
                                                                                </DataTrigger.Value>
                                                                                <Setter Property="BorderBrush" Value="Black"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                                <Canvas Width="{Binding AcitonSize.Width}" Height="{Binding AcitonSize.Height}">
                                                                    <Canvas.ContextMenu>
                                                                        <ContextMenu Visibility="{Binding DataContext.Edit,Converter={StaticResource Boolean2VisibilityConverter},Source={x:Reference Name=page}}">
                                                                            <MenuItem Header="按钮变换"
 Command="{Binding DataContext.SelectResizeableCommand,Source={x:Reference Name=page}}"
CommandParameter="{Binding ButtonSize}"/>
                                                                            <MenuItem Header="输入变换"
 Command="{Binding DataContext.SelectResizeableCommand,Source={x:Reference Name=page}}"
						CommandParameter="{Binding InputSize}"/>
                                                                            <MenuItem Header="输出变换"
 Command="{Binding DataContext.SelectResizeableCommand,Source={x:Reference Name=page}}"
						CommandParameter="{Binding OutputSize}"/>
                                                                            <MenuItem Header="边框变换"
 Command="{Binding DataContext.SelectResizeableCommand,Source={x:Reference Name=page}}"
						CommandParameter="{Binding AcitonSize}"/>
                                                                        </ContextMenu>
                                                                    </Canvas.ContextMenu>
                                                                    <Button Content="{Binding Name}" Command="{Binding DataContext.RunCommand,ElementName=page}" CommandParameter="{Binding .}"  Canvas.Left="{Binding ButtonSize.Left}" Canvas.Top="{Binding ButtonSize.Top}" Height="{Binding ButtonSize.Height}" Width="{Binding ButtonSize.Width}"></Button>

                                                                    <StackPanel Canvas.Right="0" Canvas.Bottom="0" Visibility="{Binding IsMouseOver,Converter={StaticResource Boolean2VisibilityConverter},ElementName=BoxBorder}">
                                                                        <Button Content="前移" Height="20" Padding="0" Foreground="#673ab7" Visibility="{Binding DataContext.Edit,Converter={StaticResource Boolean2VisibilityConverter},ElementName=page}" Command="{Binding DataContext.MoveForwardActionCommand,ElementName=page}"  >
                                                                            <Button.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource spikeDeleteActionConverter}">
                                                                                    <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}" 			Path="DataContext"></Binding>
                                                                                    <Binding  Path="."></Binding>
                                                                                </MultiBinding>
                                                                            </Button.CommandParameter>
                                                                        </Button>
                                                                        <Button Content="后移" Height="20" Padding="0" Foreground="#673ab7" Visibility="{Binding DataContext.Edit,Converter={StaticResource Boolean2VisibilityConverter},ElementName=page}" Command="{Binding DataContext.MoveBackActionCommand,ElementName=page}"  >
                                                                            <Button.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource spikeDeleteActionConverter}">
                                                                                    <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}" 			Path="DataContext"></Binding>
                                                                                    <Binding  Path="."></Binding>
                                                                                </MultiBinding>
                                                                            </Button.CommandParameter>
                                                                        </Button>
                                                                        <Button Content="删除" Height="20" Padding="0" Foreground="#ff6e6e" Visibility="{Binding DataContext.Edit,Converter={StaticResource Boolean2VisibilityConverter},ElementName=page}" Command="{Binding DataContext.DeleteActionCommand,ElementName=page}" >
                                                                            <Button.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource spikeDeleteActionConverter}">
                                                                                    <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}" Path="DataContext"></Binding>
                                                                                    <Binding  Path="."></Binding>
                                                                                </MultiBinding>
                                                                            </Button.CommandParameter>
                                                                        </Button>
                                                                    </StackPanel>

                                                                    <ItemsControl ItemsSource="{Binding Inputs}" Canvas.Left="{Binding InputSize.Left}" Canvas.Top="{Binding InputSize.Top}" Width="{Binding InputSize.Width}" Height="{Binding InputSize.Height}">
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel Orientation="Horizontal"></WrapPanel>
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <StackPanel>
                                                                                    <TextBox  hc:TitleElement.Title="{Binding Description}"  Text="{Binding Value}"></TextBox>
                                                                                </StackPanel>

                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>
                                                                    <ItemsControl ItemsSource="{Binding Outputs}" Canvas.Left="{Binding OutputSize.Left}" Canvas.Top="{Binding OutputSize.Top}"  Width="{Binding OutputSize.Width}" Height="{Binding OutputSize.Height}">
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel Orientation="Horizontal"></WrapPanel>
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <StackPanel HorizontalAlignment="Left" >
                                                                                    <TextBlock Text="{Binding Description}"></TextBlock>
                                                                                    <TextBlock Text="{Binding Value}"></TextBlock>
                                                                                </StackPanel>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>

                                                                </Canvas>

                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                        </ScrollViewer>

                                        <rxui:RoutedViewHost 
                                            Visibility="{Binding ShowView,Converter={StaticResource Boolean2VisibilityConverter}}" 
                                            Router="{Binding Router}"  >
                                            <rxui:RoutedViewHost.DefaultContent>
                                                <WrapPanel>

                                                </WrapPanel>
                                            </rxui:RoutedViewHost.DefaultContent>
                                            <rxui:RoutedViewHost.ViewLocator>
                                                <app:AppViewLocator />
                                            </rxui:RoutedViewHost.ViewLocator>
                                        </rxui:RoutedViewHost>
                                    </Grid>

                                </GroupBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </Grid>

</rxui:ReactiveUserControl>
