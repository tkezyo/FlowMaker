<rxui:ReactiveUserControl x:Class="FlowMaker.Views.FlowMakerMonitorView"
              xmlns:rxui="http://reactiveui.net"
                xmlns:vms="clr-namespace:FlowMaker.ViewModels;assembly=FlowMaker.UIBase"
            x:TypeArguments="vms:FlowMakerMonitorViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FlowMaker.Views"
                          xmlns:s="clr-namespace:System;assembly=mscorlib"
                          xmlns:converters="clr-namespace:FlowMaker.Converters" d:DataContext="{d:DesignInstance Type=vms:FlowMakerMonitorViewModel}"
  xmlns:app="clr-namespace:Ty;assembly=Ty.WPFBase"
                          mc:Ignorable="d" 
                          x:Name="page"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend.Small}"></Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxExtend.Small}"></Style>
        <converters:CountToVisibilityReConverter x:Key="CountToVisibilityReConverter" />
        <converters:MonitorDebugConverter x:Key="MonitorDebugConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ItemsControl ItemsSource="{Binding Categories}" Grid.Column="0">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Expander Header="{Binding Category}">
                            <ItemsControl Margin="4" ItemsSource="{Binding Flows}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Content="{Binding Name}" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.ExecuteFlowCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                                <Button Content="编辑" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.CreateCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                                <Button Content="删除" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.RemoveCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                            </StackPanel>

                                            <ItemsControl Margin="4" ItemsSource="{Binding Configs}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Button Content="{Binding ConfigName,StringFormat={}-{0}}" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.RunConfigCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                                            <Button Content="编辑" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.LoadConfigCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                                            <Button Content="删除" Style="{StaticResource ButtonCustom}" Command="{Binding DataContext.RemoveConfigCommand,ElementName=page}" CommandParameter="{Binding .}"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>

                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <ItemsControl ItemsSource="{Binding Flows}" Grid.Column="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding DataContext.ColCount, ElementName=page}" Rows="{Binding DataContext.RowCount, ElementName=page}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <ToolBarTray DockPanel.Dock="Top" Orientation="Horizontal">
                            <ToolBar>

                                <StackPanel Visibility="{Binding Running,Converter={StaticResource Boolean2VisibilityReConverter}}" Orientation="Horizontal">
                                    <Button Content="运行" Command="{Binding DataContext.RunCommand,ElementName=page}" CommandParameter="{Binding .}" Style="{StaticResource ButtonPrimary.Small}" Visibility="{Binding Debug,Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                    <Button Content="保存" Command="{Binding DataContext.SaveConfigCommand,ElementName=page}" CommandParameter="{Binding .}" Style="{StaticResource ButtonSuccess.Small}" Visibility="{Binding Debug,Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                    <Button Content="删除" Command="{Binding DataContext.DeleteCommand,ElementName=page}" CommandParameter="{Binding .}" Style="{StaticResource ButtonDanger.Small}" Visibility="{Binding Debug,Converter={StaticResource Boolean2VisibilityConverter}}"/>

                                </StackPanel>
                                <StackPanel Visibility="{Binding Running,Converter={StaticResource Boolean2VisibilityConverter}}">
                                    <Button Content="停止" Command="{Binding DataContext.StopCommand,ElementName=page}" CommandParameter="{Binding .}" Style="{StaticResource ButtonWarning.Small}" Visibility="{Binding Debug,Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                </StackPanel>
                                <Button  Content="锁定" Command="{Binding DataContext.LockCommand,ElementName=page}" CommandParameter="{Binding .}" Visibility="{Binding Debug,Converter={StaticResource Boolean2VisibilityReConverter}}" Style="{StaticResource ButtonDefault.Small}"/>

                                <TextBox Text="{Binding DisplayName}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="名称:"  hc:TitleElement.TitlePlacement="Left" IsReadOnly="True"/>
                                <Separator Margin="10,0"/>

                                <TextBox Text="{Binding Timeout,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="超时:"  hc:TitleElement.TitlePlacement="Left"/>
                                <TextBox Text="{Binding Retry,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="重试:"  hc:TitleElement.TitlePlacement="Left"/>
                                <TextBox Text="{Binding Repeat,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="重复:"  hc:TitleElement.TitlePlacement="Left"/>
                                <ComboBox ItemsSource="{Binding DataContext.ErrorHandlings,ElementName=page}" Style="{StaticResource ComboBoxExtend.Small}" SelectedItem="{Binding ErrorHandling,UpdateSourceTrigger=PropertyChanged}" hc:TitleElement.Title="错误处理:" hc:TitleElement.TitlePlacement="Left"/>
                                <Separator Margin="10,0"/>

                                <ItemsControl ItemsSource="{Binding Middlewares}" Grid.Row="5"  Grid.ColumnSpan="2" Margin="0,5">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding Selected,Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Separator Margin="10,0"/>

                                <ItemsControl ItemsSource="{Binding Data}" VerticalAlignment="Center">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <TextBox hc:TitleElement.Title="{Binding DisplayName}" MinWidth="50"  Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" hc:TitleElement.TitlePlacement="Left" Visibility="{Binding HasOption,Converter={StaticResource Boolean2VisibilityReConverter}}"/>
                                                <ComboBox  hc:TitleElement.Title="{Binding DisplayName}" hc:TitleElement.TitlePlacement="Left" ItemsSource="{Binding Options}" SelectedValue="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding HasOption,Converter={StaticResource Boolean2VisibilityConverter}}" SelectedValuePath="Name" DisplayMemberPath="DisplayName"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Separator Margin="10,0"/>

                                <TextBox Text="{Binding EventName,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="事件名称:"  hc:TitleElement.TitlePlacement="Left" MinWidth="80"/>
                                <TextBox Text="{Binding EventData,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="事件数据:"  hc:TitleElement.TitlePlacement="Left" MinWidth="80"/>
                                <Button Content="发送事件" Command="{Binding DataContext.SendEventCommand,ElementName=page}" CommandParameter="{Binding .}" Style="{StaticResource ButtonDashedPrimary.Small}"/>

                            </ToolBar>
                        </ToolBarTray>

                        <rxui:RoutedViewHost DockPanel.Dock="Bottom" 
   Visibility="{Binding ShowView,Converter={StaticResource Boolean2VisibilityConverter}}" 
   Router="{Binding Router}"  >
                            <rxui:RoutedViewHost.DefaultContent>
                                <WrapPanel>
                                </WrapPanel>
                            </rxui:RoutedViewHost.DefaultContent>
                            <rxui:RoutedViewHost.ViewLocator>
                                <app:AppViewLocator />
                            </rxui:RoutedViewHost.ViewLocator>
                        </rxui:RoutedViewHost>

                        <ScrollViewer>
                            <StackPanel>
                                <ProgressBar Value="{Binding Percent}" Height="6" Visibility="{Binding Running,Converter={StaticResource Boolean2VisibilityConverter}}" Style="{StaticResource ProgressBarSuccessStripe}">

                                </ProgressBar>
                                <TreeView ItemsSource="{Binding Steps}">
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate
                              ItemsSource="{Binding Steps}"
                              DataType="vms:MonitorStepInfoViewModel">
                                            <StackPanel Orientation="Horizontal">
                                                <Button 
Width="15" Height="15" Margin="3" hc:BorderElement.CornerRadius="10" Content=""  Visibility="{Binding DataContext.Debug,Converter={StaticResource Boolean2VisibilityConverter},RelativeSource={RelativeSource AncestorType=TreeView,Mode=FindAncestor}}">
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MonitorDebugConverter}">
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ItemsControl,Mode=FindAncestor,AncestorLevel=2}"/>
                                                            <Binding Path="."/>
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Debugging}" Value="True">
                                                                    <Setter Property="Background" Value="Orange"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsDebug}" Value="True">
                                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                                    <Setter Property="BorderThickness" Value="3"/>
                                                                    <Setter Property="Command" Value="{Binding DataContext.RemoveDebugCommand,ElementName=page}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsDebug}" Value="False">
                                                                    <Setter Property="Command" Value="{Binding DataContext.AddDebugCommand,ElementName=page}"/>
                                                                </DataTrigger>

                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <TextBlock Margin="10,0" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding UsedTime, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </StackPanel>

                        </ScrollViewer>
                    </DockPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</rxui:ReactiveUserControl>
