<rxui:ReactiveUserControl x:Class="FlowMaker.Views.FlowMakerEditView"
               xmlns:rxui="http://reactiveui.net"
                    xmlns:vms="clr-namespace:FlowMaker.ViewModels;assembly=FlowMaker.UIBase"
                x:TypeArguments="vms:FlowMakerEditViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                           xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:FlowMaker.Views" d:DataContext="{d:DesignInstance Type=vms:FlowMakerEditViewModel}"
                    xmlns:models="clr-namespace:FlowMaker;assembly=FlowMaker"
             xmlns:controls="clr-namespace:FlowMaker.Controls"
                          mc:Ignorable="d" 
                            xmlns:s="clr-namespace:System;assembly=mscorlib"
                          x:Name="page"
                           xmlns:converters="clr-namespace:FlowMaker.Converters" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                          d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:LeftToMarginConverter x:Key="marginConverter" />
        <converters:EqualToVisibilityConverter x:Key="EqualToVisibilityConverter" />
        <converters:LeftToWidthConverter x:Key="widthConverter"/>
        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxExtend}"></Style>
        <Style TargetType="GroupBox" BasedOn="{StaticResource GroupBoxTab.Small}">
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend}"></Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>
        <Style TargetType="hc:NumericUpDown" BasedOn="{StaticResource NumericUpDownExtend}"></Style>
        <converters:EqualToBoolConverter x:Key="EqualConverter" />
        <converters:StartWithToVisibilityConverter x:Key="StartWithToVisibilityConverter" />
        <Style TargetType="Button" x:Key="actionBtn" 
               BasedOn="{StaticResource ButtonCustom}">
            <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="Gray"/>
            <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="BorderBrush" Value="#534fbc"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static vms:StepStatus.Normal}">
                    <Setter  Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static vms:StepStatus.DependencyError}">
                    <Setter Property="Background" Value="IndianRed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static vms:StepStatus.PreStep}">
                    <Setter  Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="DarkBlue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static vms:StepStatus.IndirectPreStep}">
                    <Setter Property="Background" Value="DeepSkyBlue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static vms:StepStatus.Selected}">
                    <Setter Property="Background" Value="LimeGreen"/>
                </DataTrigger>
            </Style.Triggers>

        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ToolBar Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">
            <Button  Style="{StaticResource ButtonCustom}" Command="{Binding SaveCommand}" Foreground="LimeGreen">
                <iconPacks:PackIconPixelartIcons Kind="Save" />
            </Button>
            <Separator Margin="10,0"/>
            <TextBox Text="{Binding Category}" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="分组:" Style="{StaticResource TextBoxExtend}" MinWidth="80"/>
            <TextBox Text="{Binding Name}" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="名称:" Style="{StaticResource TextBoxExtend}" MinWidth="80"/>
            <Separator Margin="10,0"/>
            <Button  Margin="4,0" Command="{Binding CreateCommand}" Foreground="SkyBlue" Style="{StaticResource ButtonCustom}">
                <iconPacks:PackIconPixelartIcons Kind="AddBox" />
            </Button>



            <Button Margin="4,0" Visibility="{Binding ShowEdit,Converter={StaticResource Boolean2VisibilityConverter}}"  Command="{Binding DeleteActionCommand}" Style="{StaticResource ButtonCustom}" Foreground="OrangeRed">
                <iconPacks:PackIconPixelartIcons Kind="RemoveBox" />
            </Button>
            <Button  Margin="4,0" Visibility="{Binding ShowEdit,Converter={StaticResource Boolean2VisibilityConverter}}"   Command="{Binding DataContext.UpActionCommand,ElementName=page}" Style="{StaticResource ButtonCustom}" >
                <iconPacks:PackIconPixelartIcons Kind="ArrowUpBox" />
            </Button>
            <Button Margin="4,0"  Visibility="{Binding ShowEdit,Converter={StaticResource Boolean2VisibilityConverter}}"   Command="{Binding DataContext.DownActionCommand,ElementName=page}"  Style="{StaticResource ButtonCustom}">
                <iconPacks:PackIconPixelartIcons Kind="ArrowDownBox" />
            </Button>
            <CheckBox Content="编辑前置步骤"   Visibility="{Binding GanttMode,Converter={StaticResource Boolean2VisibilityConverter}}" IsChecked="{Binding EditPreStep}"/>
            <Separator Margin="10,0"/>
            <CheckBox Content="变量"  Name="showData"/>
            <Button Command="{Binding CreateGlobalDataCommand}" Visibility="{Binding IsChecked,Converter={StaticResource Boolean2VisibilityConverter},ElementName=showData}" Style="{StaticResource ButtonPrimary.Small}">创建</Button>
            <Separator Margin="10,0"/>
            <CheckBox Content="甘特图" IsChecked="{Binding GanttMode}"/>
            <Separator Margin="10,0"/>
            <Slider VerticalAlignment="Center" Width="100" Value="{Binding Scale}" Minimum="1" Maximum="100" Visibility="{Binding GanttMode,Converter={StaticResource Boolean2VisibilityConverter}}"/>
        </ToolBar>
        <ScrollViewer x:Name="viewer"
                      Visibility="{Binding GanttMode,Converter={StaticResource Boolean2VisibilityConverter}}"
                      Grid.Column="0"  Grid.Row="1" HorizontalScrollBarVisibility="Auto">
            <Grid  Margin="2">
                <controls:GanttItemView  x:Name="gantee" Steps="{Binding Steps}" ChangePreCommand="{Binding ChangePreCommand}" Scale="{Binding Scale}"   VerticalAlignment="Top"/>
                <ItemsControl ItemsSource="{Binding DateAxis}"
                    Margin="30,0,0,0"  VerticalAlignment="Stretch" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid></Grid>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel  HorizontalAlignment="Left">
                                <StackPanel.Margin>
                                    <MultiBinding Converter="{StaticResource marginConverter}">
                                        <Binding Path="."/>
                                        <Binding Path="DataContext.Scale" ElementName="page"/>
                                    </MultiBinding>
                                </StackPanel.Margin>
                                <Line  HorizontalAlignment="Left" X1="0" X2="0" Y1="0" Y2="{Binding Path=ActualHeight,ElementName=gantee}" Stroke="#aa635fe2"  StrokeThickness="1"></Line>
                                <TextBlock Text="{Binding .,StringFormat={}{0:mm\\:ss}}"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ScrollViewer>
        <TreeView ItemsSource="{Binding Steps}"
                  Grid.Column="0"  Grid.Row="1"
          x:Name="tree"  Visibility="{Binding GanttMode,Converter={StaticResource Boolean2VisibilityReConverter}}"
                  Style="{StaticResource TreeView.Small}">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate
              ItemsSource="{Binding Steps}"
              DataType="vms:FlowStepViewModel">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="添加" 
  Command="{Binding Path=PlacementTarget.DataContext.MainViewModel.CreateEmbeddedCommand, 
                    RelativeSource={RelativeSource AncestorType=ContextMenu}}"
  CommandParameter="{Binding Path=PlacementTarget.DataContext, 
                             RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <ToggleButton IsChecked="{Binding Parallel}" 
                                      FontFamily="Segoe UI Emoji" FontWeight="Bold" FontSize="20" Width="30">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonCustom}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" >
                                                <Setter.Value>
                                                    <iconPacks:PackIconPixelartIcons Kind="ArrowRight" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="Green" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content" >
                                                <Setter.Value>
                                                    <iconPacks:PackIconPixelartIcons Kind="ArrowDown" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="LightBlue" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <TextBlock Margin="10,0" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel" >
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <Button  Margin="4,0" Command="{Binding DataContext.CreateEmbeddedSubStepCommand,ElementName=page}" Visibility="{Binding IsSubFlow,Converter={StaticResource Boolean2VisibilityConverter}}"  Foreground="LightGreen" Style="{StaticResource ButtonCustom}" CommandParameter="{Binding .}" ToolTip="子步骤">

                                <iconPacks:PackIconPixelartIcons Kind="AddBox" />
                            </Button>
                          
                            <ToggleButton Content="展开"
                                     Margin="3,0"
                                     FontSize="10"
                                          Visibility="{Binding IsSubFlow,Converter={StaticResource Boolean2VisibilityConverter}}"
                                           HorizontalAlignment="Left"
                                     Style="{StaticResource ToggleButtonCustom}"
                                           IsChecked="{Binding ShowSubSteps}"
                                     />
                        </StackPanel>
                        <ItemsControl ItemsSource="{Binding Conditions}" VerticalAlignment="Center">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding DisplayName}" Margin="2,0" IsChecked="{Binding IsTrue}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <Grid Grid.Row="1" Grid.Column="3" 
Visibility="{Binding IsChecked,Converter={StaticResource Boolean2VisibilityConverter},ElementName=showData}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*" MaxHeight="200"/>
            </Grid.RowDefinitions>

            <UniformGrid Columns="10" Grid.Row="0">
                <TextBlock Text="显示名称"/>
                <TextBlock Text="名称"/>
                <TextBlock Text="输入"/>
                <TextBlock Text="输出"/>
                <TextBlock Text="类型"/>
                <TextBlock Text="数组"/>
                <TextBlock Text="维度"/>
                <TextBlock Text="默认值"/>
                <TextBlock Text="操作"/>
            </UniformGrid>
            <ItemsControl ItemsSource="{Binding GlobeData}" Grid.Row="1">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <UniformGrid Columns="10" >
                            <TextBox Text="{Binding DisplayName}"/>
                            <TextBox Text="{Binding Name}"/>
                            <CheckBox IsChecked="{Binding IsInput}"/>
                            <CheckBox IsChecked="{Binding IsOutput}"/>
                            <ComboBox SelectedItem="{Binding Type}" ItemsSource="{Binding DataContext.FlowDataTypes,ElementName=page}"  IsEnabled="{Binding IsStepOutput,Converter={StaticResource Boolean2BooleanReConverter}}"/>
                            <CheckBox IsChecked="{Binding IsArray}" IsEnabled="{Binding IsStepOutput,Converter={StaticResource Boolean2BooleanReConverter}}"/>
                            <TextBox Text="{Binding Rank}" IsEnabled="{Binding IsStepOutput,Converter={StaticResource Boolean2BooleanReConverter}}"/>
                            <TextBox Text="{Binding DefaultValue}"/>
                            <StackPanel Orientation="Horizontal">
                                <Button HorizontalAlignment="Left" Command="{Binding DataContext.EditGlobalDataOptionCommand,ElementName=page}" CommandParameter="{Binding .}" Content="选项" Style="{StaticResource ButtonPrimary.Small}"  Visibility="{Binding OptionProviderName,Converter={StaticResource String2VisibilityReConverter}}"/>
                                <hc:Badge Value="{Binding Options.Count}" BadgeMargin="-10" Style="{StaticResource BadgePrimary}">

                                </hc:Badge>

                                <Button Content="删除"   Margin="5,0" Command="{Binding DataContext.RemoveGlobalDataCommand,ElementName=page}" CommandParameter="{Binding}" Style="{StaticResource ButtonDanger.Small}"  IsEnabled="{Binding IsStepOutput,Converter={StaticResource Boolean2BooleanReConverter}}"/>
                            </StackPanel>
                        </UniformGrid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ScrollViewer
                Visibility="{Binding DataContext.ShowGlobalDataOption,ElementName=page,Converter={StaticResource Boolean2VisibilityConverter}}" Grid.Row="2">
                <StackPanel  DataContext="{Binding CurrentGlobalData}">
                    <ComboBox  hc:TitleElement.Title="选项集" Style="{StaticResource ComboBoxExtend.Small}" ItemsSource="{Binding OptionProviders}" SelectedValuePath="Value" SelectedValue="{Binding OptionProviderName}" DisplayMemberPath="Name" hc:TitleElement.TitlePlacement="Left" />
                    <Button HorizontalAlignment="Left" Command="{Binding AddOptionCommand}" Content="添加选项" Style="{StaticResource ButtonPrimary.Small}"  Visibility="{Binding OptionProviderName,Converter={StaticResource String2VisibilityReConverter}}"/>
                    <ItemsControl ItemsSource="{Binding Options}" 
Visibility="{Binding OptionProviderName,Converter={StaticResource String2VisibilityReConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="{Binding DisplayName}" hc:TitleElement.Title="显示名称" Style="{StaticResource TextBoxExtend.Small}"/>
                                    <TextBox Text="{Binding Name}" hc:TitleElement.Title="值" Style="{StaticResource TextBoxExtend.Small}"/>
                                    <Button VerticalAlignment="Bottom" Command="{Binding DataContext.RemoveOptionCommand,RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}" Style="{StaticResource ButtonDanger.Small}" CommandParameter="{Binding .}">
                                        <iconPacks:PackIconPixelartIcons Kind="Trash" Width="10"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <ScrollViewer Grid.Row="1" Grid.Column="1"  Padding="10,5" 
            Visibility="{Binding ShowEdit,Converter={StaticResource Boolean2VisibilityConverter}}">
            <StackPanel>
                <GroupBox Header="基本信息">
                    <StackPanel>
                        <Grid HorizontalAlignment="Stretch"  >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding FlowStep.DisplayName,UpdateSourceTrigger=PropertyChanged}" hc:InfoElement.Title="显示名称" Grid.Column="0" />
                            <ToggleButton  Content="子流程" Margin="0,0,0,0" Style="{StaticResource ToggleButtonInfo}" IsChecked="{Binding FlowStep.IsSubFlow}"  Grid.Column="1"  VerticalAlignment="Bottom"/>

                        </Grid>
          
                        <Grid HorizontalAlignment="Stretch"  >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox  ItemsSource="{Binding StepGroups}" hc:InfoElement.Title="分组"  SelectedItem="{Binding FlowStep.Category}" Grid.Column="0"></ComboBox>
                            <ComboBox HorizontalContentAlignment="Stretch" ItemsSource="{Binding StepDefinitions}" hc:InfoElement.Title="名称" SelectedItem="{Binding FlowStep.SelectedStep}" DisplayMemberPath="Name"  Grid.Column="1"></ComboBox>
                            <Button Visibility="{Binding FlowStep.IsSubFlow,Converter={StaticResource Boolean2VisibilityConverter}}" Content="详情" Command="{Binding ShowSubFlowCommand}" CommandParameter="{Binding FlowStep}" VerticalAlignment="Bottom"  Grid.Column="2"/>
                        </Grid>

                        <controls:FlowInputView DataContext="{Binding FlowStep.TimeOut}"></controls:FlowInputView>
                        <controls:FlowInputView DataContext="{Binding FlowStep.Repeat}"></controls:FlowInputView>
                        <controls:FlowInputView DataContext="{Binding FlowStep.Retry}"></controls:FlowInputView>
                        <controls:FlowInputView DataContext="{Binding FlowStep.ErrorHandling}"></controls:FlowInputView>
                        <controls:FlowInputView DataContext="{Binding FlowStep.Finally}"></controls:FlowInputView>

                        <TextBox Visibility="{Binding GanttMode,Converter={StaticResource Boolean2VisibilityConverter}}" Text="{Binding FlowStep.Time}" hc:InfoElement.Title="显示时间" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="输入" Visibility="{Binding FlowStep.ShowInput,Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ItemsControl ItemsSource="{Binding FlowStep.Inputs}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <controls:FlowInputView ></controls:FlowInputView>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>
                <GroupBox Header="输出" Visibility="{Binding FlowStep.ShowOutput,Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ItemsControl ItemsSource="{Binding FlowStep.Outputs}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}" Margin="0,0,10,0" VerticalAlignment="Center" FontWeight="Bold" ToolTip="{Binding Type}"></TextBlock>
                                        <Button Content="{Binding ModelName}" Command="{Binding ChangeModeCommand}" Style="{StaticResource ButtonCustom}" Foreground="DodgerBlue" VerticalAlignment="Bottom" />
                                    </StackPanel>
                                    <TextBox  Visibility="{Binding Mode,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EqualToVisibilityConverter},ConverterParameter={x:Static models:OutputMode.Global}}"  Text="{Binding GlobalDataName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>

                <GroupBox >
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="条件" VerticalAlignment="Center" Margin="10,0"/>
                            <Button Command="{Binding InitConditionCommand}" Style="{StaticResource ButtonInfo.Small}" HorizontalAlignment="Left" Padding="1">
                                <iconPacks:PackIconPixelartIcons Kind="Reload" />
                            </Button>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox ItemsSource="{Binding ConditionData}" SelectedItem="{Binding SelectConditionData}" DisplayMemberPath="DisplayName" Style="{StaticResource ComboBoxExtend.Small}" Grid.Column="0"/>
                            <Button Content="添加" Command="{Binding AddConditionCommand}" Style="{StaticResource ButtonPrimary.Small}" Grid.Column="1"/>
                        </Grid>
                        <ItemsControl ItemsSource="{Binding FlowStep.Conditions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding IsTrue}"  Grid.Column="0"></CheckBox>
                                        <CheckBox Content="执行" IsChecked="{Binding Execute}" Grid.Column="1"></CheckBox>
                                        <Button  Command="{Binding DataContext.RemoveConditionCommand,ElementName=page}" CommandParameter="{Binding .}" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ButtonDanger.Small}" Padding="1" Grid.Column="2">
                                            <iconPacks:PackIconPixelartIcons Kind="Trash" />
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </GroupBox>
                <GroupBox>
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="等待事件" VerticalAlignment="Center" Margin="10,0"/>
                            <Button Command="{Binding AddWaitEventCommand}" Style="{StaticResource ButtonInfo.Small}" HorizontalAlignment="Left" Padding="1">
                                <iconPacks:PackIconPixelartIcons Kind="Plus" />
                            </Button>
                        </StackPanel>
                    </GroupBox.Header>
                    <ItemsControl ItemsSource="{Binding FlowStep.WaitEvents}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}" Grid.Column="0"/>
                                    <Button  Command="{Binding DataContext.RemoveWaitEventCommand,ElementName=page}" CommandParameter="{Binding .}" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ButtonDanger.Small}" Padding="1"  Grid.Column="1">
                                        <iconPacks:PackIconPixelartIcons Kind="Trash" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</rxui:ReactiveUserControl>
