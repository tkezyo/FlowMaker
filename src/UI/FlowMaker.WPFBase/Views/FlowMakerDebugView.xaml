<rxui:ReactiveUserControl x:Class="FlowMaker.Views.FlowMakerDebugView"
              xmlns:rxui="http://reactiveui.net"
                xmlns:vms="clr-namespace:FlowMaker.ViewModels;assembly=FlowMaker.UIBase"
                x:TypeArguments="vms:FlowMakerDebugViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:FlowMaker.Views" 
                          xmlns:converters="clr-namespace:FlowMaker.Converters" 
  xmlns:app="clr-namespace:Ty;assembly=Ty.WPFBase" d:DataContext="{d:DesignInstance Type=vms:FlowMakerDebugViewModel}"
                          mc:Ignorable="d" 
                          x:Name="page"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend.Small}"></Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxExtend.Small}"></Style>
        <converters:CountToVisibilityReConverter x:Key="CountToVisibilityReConverter" />
        <converters:MonitorDebugConverter x:Key="MonitorDebugConverter" />
    </UserControl.Resources>
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top" Orientation="Horizontal">
            <ToolBar>
                <TextBlock Text="{Binding Model.DisplayName}"  VerticalAlignment="Center" Margin="4,0"/>
                <Button Content="运行" Command="{Binding RunCommand}" CommandParameter="{Binding Model}" Style="{StaticResource ButtonPrimary.Small}"  Visibility="{Binding Model.Running,Converter={StaticResource Boolean2VisibilityReConverter}}"/>

                <Button Content="停止" Command="{Binding StopCommand}" CommandParameter="{Binding Model}" Style="{StaticResource ButtonWarning.Small}" Visibility="{Binding Model.Running,Converter={StaticResource Boolean2VisibilityConverter}}"/>

                <Separator Margin="10,0"/>


                <TextBox Text="{Binding Model.EventName,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="事件名称:"  hc:TitleElement.TitlePlacement="Left" MinWidth="80"/>
                <TextBox Text="{Binding Model.EventData,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="事件数据:"  hc:TitleElement.TitlePlacement="Left" MinWidth="80"/>
                <Button Content="发送事件" Command="{Binding DataContext.SendEventCommand,ElementName=page}" CommandParameter="{Binding Model}" Style="{StaticResource ButtonDashedPrimary.Small}"/>
                <CheckBox Content="编辑"  x:Name="edit"/>

            </ToolBar>
            <ToolBar Visibility="{Binding IsChecked,ElementName=edit,Converter={StaticResource Boolean2VisibilityConverter}}" Band="2">
                <Button Content="保存" Command="{Binding DataContext.SaveConfigCommand,ElementName=page}" CommandParameter="{Binding Model}" Style="{StaticResource ButtonSuccess.Small}"/>
                <TextBox Text="{Binding Model.Timeout,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="超时:"  hc:TitleElement.TitlePlacement="Left"/>
                <TextBox Text="{Binding Model.Retry,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="重试:"  hc:TitleElement.TitlePlacement="Left"/>
                <TextBox Text="{Binding Model.Repeat,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxExtend.Small}" hc:TitleElement.Title="重复:"  hc:TitleElement.TitlePlacement="Left"/>
                <ComboBox ItemsSource="{Binding DataContext.ErrorHandlings,ElementName=page}" Style="{StaticResource ComboBoxExtend.Small}" SelectedItem="{Binding Model.ErrorHandling,UpdateSourceTrigger=PropertyChanged}" hc:TitleElement.Title="错误处理:" hc:TitleElement.TitlePlacement="Left"/>
                <Separator Margin="10,0"/>

                <ItemsControl ItemsSource="{Binding Model.Middlewares}" Grid.Row="5"  Grid.ColumnSpan="2" Margin="0,5">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding Selected,Mode=TwoWay}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Separator Margin="10,0"/>

                <ItemsControl ItemsSource="{Binding Model.Data}" VerticalAlignment="Center">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBox hc:TitleElement.Title="{Binding DisplayName}" MinWidth="50"  Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" hc:TitleElement.TitlePlacement="Left" Visibility="{Binding HasOption,Converter={StaticResource Boolean2VisibilityReConverter}}"/>
                                <ComboBox  hc:TitleElement.Title="{Binding DisplayName}" hc:TitleElement.TitlePlacement="Left" ItemsSource="{Binding Options}" SelectedValue="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding HasOption,Converter={StaticResource Boolean2VisibilityConverter}}" SelectedValuePath="Name" DisplayMemberPath="DisplayName"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </ToolBar>
        </ToolBarTray>

        <rxui:RoutedViewHost DockPanel.Dock="Bottom" 
   Visibility="{Binding Model.ShowView,Converter={StaticResource Boolean2VisibilityConverter}}" 
   Router="{Binding Model.Router}"  >
            <rxui:RoutedViewHost.DefaultContent>
                <WrapPanel>
                </WrapPanel>
            </rxui:RoutedViewHost.DefaultContent>
            <rxui:RoutedViewHost.ViewLocator>
                <app:AppViewLocator />
            </rxui:RoutedViewHost.ViewLocator>
        </rxui:RoutedViewHost>

        <ScrollViewer>
            <StackPanel>
                <ProgressBar Value="{Binding Model.Percent}" Height="6" Visibility="{Binding Model.Running,Converter={StaticResource Boolean2VisibilityConverter}}" Style="{StaticResource ProgressBarSuccessStripe}">

                </ProgressBar>
                <TreeView ItemsSource="{Binding Model.Steps}">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate
                              ItemsSource="{Binding Steps}"
                              DataType="vms:MonitorStepInfoViewModel">
                            <StackPanel Orientation="Horizontal">
                                <Button 
Width="15" Height="15" Margin="3" hc:BorderElement.CornerRadius="10" Content="">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MonitorDebugConverter}">
                                            <Binding Path="DataContext.Model" ElementName="page"/>
                                            <Binding Path="."/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Debugging}" Value="True">
                                                    <Setter Property="Background" Value="Orange"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsDebug}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                    <Setter Property="BorderThickness" Value="3"/>
                                                    <Setter Property="Command" Value="{Binding DataContext.RemoveDebugCommand,ElementName=page}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsDebug}" Value="False">
                                                    <Setter Property="Command" Value="{Binding DataContext.AddDebugCommand,ElementName=page}"/>
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <TextBlock Margin="10,0" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding UsedTime, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </StackPanel>

        </ScrollViewer>
    </DockPanel>
</rxui:ReactiveUserControl>
