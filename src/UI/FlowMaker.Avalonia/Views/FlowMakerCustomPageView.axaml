<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:rxui="http://reactiveui.net"
                          x:Name="page"
                           xmlns:converters="clr-namespace:FlowMaker.Converters"
                            xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
  xmlns:app="clr-namespace:Ty;assembly=Ty.AvaloniaBase"
             x:Class="FlowMaker.FlowMakerCustomPageView">
	<UserControl.Resources>
		<converters:SpikeDeleteBoxConverter x:Key="spikeDeleteBoxConverter"/>
		<converters:SpikeDeleteActionConverter x:Key="spikeDeleteActionConverter"/>
	</UserControl.Resources>
	<TabControl ItemsSource="{Binding Tabs}" x:Name="tab"
		HorizontalContentAlignment="Center" TabStripPlacement="Top" SelectedItem="{Binding CurrentTab}" >
		<TabControl.ItemTemplate>
			<DataTemplate>
				<TextBlock Text="{Binding Name}" >
				</TextBlock>
			</DataTemplate>
		</TabControl.ItemTemplate>
		<TabControl.ContentTemplate>
			<DataTemplate>
				<ItemsControl ItemsSource="{Binding Boxes}">
					<ItemsControl.ItemContainerTheme>
						<ControlTheme TargetType="ContentPresenter">
							<ControlTheme.Setters>
								<Setter Property="Grid.Row" Value="{Binding Size.Top}" />
								<Setter Property="Grid.Column" Value="{Binding Size.Left}" />
								<Setter Property="Grid.ColumnSpan" Value="{Binding Size.Width}" />
								<Setter Property="Grid.RowSpan" Value="{Binding Size.Height}" />
							</ControlTheme.Setters>
						</ControlTheme>
					</ItemsControl.ItemContainerTheme>
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
							</Grid>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<HeaderedContentControl Margin="4" Theme="{DynamicResource GroupBox}">
								<i:Interaction.Behaviors>
									<ia:DataTriggerBehavior Binding="{Binding Editing}"
															ComparisonCondition="Equal">
										<ia:DataTriggerBehavior.Value>
											<s:Boolean>True</s:Boolean>
										</ia:DataTriggerBehavior.Value>
										<ia:ChangePropertyAction PropertyName="BorderBrush" Value="{DynamicResource SemiColorPrimary}" />
										<ia:ChangePropertyAction PropertyName="BorderThickness" Value="1" />
									</ia:DataTriggerBehavior>
								</i:Interaction.Behaviors>
								<HeaderedContentControl.Header>
									<Button  Command="{Binding DataContext.SelectBoxCommand,ElementName=page}"  Content="{Binding Name}"  CommandParameter="{Binding .}" >
									</Button>
								</HeaderedContentControl.Header>
								<Grid>
									<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                 IsVisible="{Binding !ShowView}">
										<ItemsControl ItemsSource="{Binding Actions}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<WrapPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" ></WrapPanel>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Border HorizontalAlignment="Center" VerticalAlignment="Center" Name="BoxBorder" >
														<i:Interaction.Behaviors>
															<ia:DataTriggerBehavior Binding="{Binding DataContext.Edit,ElementName=page}"
																					ComparisonCondition="Equal">
																<ia:DataTriggerBehavior.Value>
																	<s:Boolean>True</s:Boolean>
																</ia:DataTriggerBehavior.Value>

																<ia:ChangePropertyAction PropertyName="BorderThickness" Value="1" />
															</ia:DataTriggerBehavior>
														</i:Interaction.Behaviors>
														<Canvas Width="{Binding ActionSize.Width}" Height="{Binding ActionSize.Height}">
															<Button Content="{Binding DisplayName}"  Canvas.Left="{Binding ButtonSize.Left}" Canvas.Top="{Binding ButtonSize.Top}" Height="{Binding ButtonSize.Height}" Width="{Binding ButtonSize.Width}">
																<i:Interaction.Behaviors>
																	<ia:DataTriggerBehavior Binding="{Binding DataContext.Edit,ElementName=page}"
																							ComparisonCondition="Equal">
																		<ia:DataTriggerBehavior.Value>
																			<s:Boolean>False</s:Boolean>
																		</ia:DataTriggerBehavior.Value>
																		<ia:ChangePropertyAction PropertyName="Command" Value="{Binding DataContext.RunCommand,ElementName=page}" />
																		<ia:ChangePropertyAction PropertyName="CommandParameter" Value="{Binding .}" />
																	</ia:DataTriggerBehavior>
																	<ia:DataTriggerBehavior Binding="{Binding DataContext.Edit,ElementName=page}"
																						ComparisonCondition="Equal">
																		<ia:DataTriggerBehavior.Value>
																			<s:Boolean>True</s:Boolean>
																		</ia:DataTriggerBehavior.Value>
																		<ia:ChangePropertyAction PropertyName="Command" Value="{Binding DataContext.SelectActionCommand,ElementName=page}" />
																		<ia:ChangePropertyAction PropertyName="CommandParameter" >
																			<ia:ChangePropertyAction.Value>
																				<MultiBinding Converter="{StaticResource spikeDeleteActionConverter}">
																					<Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}" Path="DataContext"></Binding>
																					<Binding  Path="."></Binding>
																				</MultiBinding>
																			</ia:ChangePropertyAction.Value>
																		</ia:ChangePropertyAction>
																	</ia:DataTriggerBehavior>
																	<ia:DataTriggerBehavior Binding="{Binding Editing}"
																						ComparisonCondition="Equal">
																		<ia:DataTriggerBehavior.Value>
																			<s:Boolean>True</s:Boolean>
																		</ia:DataTriggerBehavior.Value>
																		<ia:ChangePropertyAction PropertyName="BorderBrush" Value="Blue" />
																		<ia:ChangePropertyAction PropertyName="BorderThickness" Value="1" />
																	</ia:DataTriggerBehavior>
																</i:Interaction.Behaviors>
															</Button>

															<ItemsControl
                                                                   ItemsSource="{Binding Inputs}" Canvas.Left="{Binding InputSize.Left}" Canvas.Top="{Binding InputSize.Top}" Width="{Binding InputSize.Width}" Height="{Binding InputSize.Height}">
																<ItemsControl.ItemsPanel>
																	<ItemsPanelTemplate>
																		<WrapPanel Orientation="Horizontal"></WrapPanel>
																	</ItemsPanelTemplate>
																</ItemsControl.ItemsPanel>
																<ItemsControl.ItemTemplate>
																	<DataTemplate>
																		<StackPanel>
																			<TextBlock Text="{Binding DisplayName}"/>
																			<TextBox  Text="{Binding Value}"></TextBox>
																		</StackPanel>
																	</DataTemplate>
																</ItemsControl.ItemTemplate>
															</ItemsControl>
															<ItemsControl
                                                                   ItemsSource="{Binding Outputs}" Canvas.Left="{Binding OutputSize.Left}" Canvas.Top="{Binding OutputSize.Top}"  Width="{Binding OutputSize.Width}" Height="{Binding OutputSize.Height}">
																<ItemsControl.ItemsPanel>
																	<ItemsPanelTemplate>
																		<WrapPanel Orientation="Horizontal"></WrapPanel>
																	</ItemsPanelTemplate>
																</ItemsControl.ItemsPanel>
																<ItemsControl.ItemTemplate>
																	<DataTemplate>
																		<StackPanel HorizontalAlignment="Left" >
																			<TextBlock Text="{Binding DisplayName}"/>
																			<TextBox   IsReadOnly="True"  Text="{Binding Value}"></TextBox>
																		</StackPanel>
																	</DataTemplate>
																</ItemsControl.ItemTemplate>
															</ItemsControl>

														</Canvas>

													</Border>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</ScrollViewer>

									<rxui:RoutedViewHost
                                       IsVisible="{Binding ShowView}"
                                       Router="{Binding Router}"  >
										<rxui:RoutedViewHost.DefaultContent>
											<ScrollViewer>
												<ItemsControl ItemsSource="{Binding Inputs}">
													<ItemsControl.ItemTemplate>
														<DataTemplate>
															<StackPanel>
																<TextBlock Text="{Binding DisplayName}" />
																<TextBox Text="{Binding Value}"   IsVisible="{Binding !HasOption}"/>
																<TextBlock Text="{Binding DisplayName}"/>
																<ComboBox ItemsSource="{Binding Options}"  SelectedValue="{Binding Value}" SelectedValueBinding="{Binding Name}"   IsVisible="{Binding HasOption}" DisplayMemberBinding="{Binding DisplayName}"/>
															</StackPanel>
														</DataTemplate>
													</ItemsControl.ItemTemplate>
												</ItemsControl>
											</ScrollViewer>
										</rxui:RoutedViewHost.DefaultContent>
										<rxui:RoutedViewHost.ViewLocator>
											<app:AppViewLocator />
										</rxui:RoutedViewHost.ViewLocator>
									</rxui:RoutedViewHost>
								</Grid>

							</HeaderedContentControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</DataTemplate>
		</TabControl.ContentTemplate>
	</TabControl>
</UserControl>
