<rxui:ReactiveUserControl  x:Class="Test1.Views.FlowMakerEditStepView"
              xmlns:rxui="http://reactiveui.net"
                    xmlns:vms="clr-namespace:Test1.ViewModels"
                x:TypeArguments="vms:FlowMakerEditStepViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Test1.Views" 
                           xmlns:hc="https://handyorg.github.io/handycontrol"
                           d:DataContext="{d:DesignInstance Type=vms:FlowMakerEditStepViewModel}"
                    xmlns:converters="clr-namespace:Test1.Converters" xmlns:controls="clr-namespace:Test1.Controls"
                           mc:Ignorable="d" 
                           x:Name="page"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxExtend}"></Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend}"></Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>
        <Style TargetType="hc:NumericUpDown" BasedOn="{StaticResource NumericUpDownExtend}"></Style>
        <converters:EqualToBoolConverter x:Key="EqualConverter" />
        <converters:EqualToVisibilityConverter x:Key="EqualToVisibilityConverter" />
        <converters:StartWithToVisibilityConverter x:Key="StartWithToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Margin="10">
            <TextBox Text="{Binding Model.DisplayName}" hc:InfoElement.Title="显示名称" />
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <ComboBox  ItemsSource="{Binding StepGroups}" hc:InfoElement.Title="步骤分组"  SelectedItem="{Binding Model.Category}"></ComboBox>
                <ComboBox HorizontalContentAlignment="Stretch" ItemsSource="{Binding StepDefinitions}" hc:InfoElement.Title="步骤" SelectedValue="{Binding Model.Name}" SelectedValuePath="Name" DisplayMemberPath="DisplayName"></ComboBox>
            </StackPanel>
            <TextBox Text="{Binding Model.TimeOut}" hc:InfoElement.Title="超时时间" />
            <TextBox Text="{Binding Model.Repeat}" hc:InfoElement.Title="重复次数" />
            <TextBox Text="{Binding Model.Retry}" hc:InfoElement.Title="错误重试次数" />

            <ComboBox ItemsSource="{Binding ErrorHandlings}" hc:InfoElement.Title="错误处理方式" SelectedItem="{Binding Model.ErrorHandling}"></ComboBox>


        </StackPanel>
        <ScrollViewer  Grid.Column="1" Margin="10">
            <StackPanel>
                <TextBlock>输入</TextBlock>
                <ItemsControl ItemsSource="{Binding Inputs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <controls:FlowInputView FlowInput="{Binding .}"></controls:FlowInputView>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock>输出</TextBlock>
                <ItemsControl ItemsSource="{Binding Outputs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding DisplayName}" Margin="0,0,10,0" VerticalAlignment="Center"></TextBlock>
                                    <TextBlock Text="{Binding Type,StringFormat=({0})}" Margin="0,0,10,0" VerticalAlignment="Center"></TextBlock>
                                    <RadioButton Content="丢弃" IsChecked="{Binding Mode,Converter={StaticResource EqualConverter},ConverterParameter={x:Static vms:OutputMode.Drop}}" GroupName="{Binding Name}"></RadioButton>
                                    <RadioButton Content="全局变量" IsChecked="{Binding Mode,Converter={StaticResource EqualConverter},ConverterParameter={x:Static vms:OutputMode.Globe}}" GroupName="{Binding Name}" ></RadioButton>
                                    <RadioButton Content="全局变量转换器" IsChecked="{Binding Mode,Converter={StaticResource EqualConverter},ConverterParameter={x:Static vms:OutputMode.GlobeWithConverter}}" GroupName="{Binding Name}" Visibility="{Binding HasConverter,Converter={StaticResource Boolean2VisibilityConverter}}"></RadioButton>
                                </StackPanel>

                                <TextBox  Visibility="{Binding Mode,Converter={StaticResource EqualToVisibilityConverter},ConverterParameter={x:Static vms:OutputMode.Globe}}"  Text="{Binding GlobeDataName}" />

                                <TextBox  Visibility="{Binding Mode,Converter={StaticResource EqualToVisibilityConverter},ConverterParameter={x:Static vms:OutputMode.GlobeWithConverter}}"  Text="{Binding GlobeDataName}" />

                                <StackPanel Visibility="{Binding Mode,Converter={StaticResource EqualToVisibilityConverter},ConverterParameter={x:Static vms:OutputMode.GlobeWithConverter}}" Orientation="Horizontal" HorizontalAlignment="Stretch">

                                    <ComboBox  Style="{StaticResource ComboBoxExtend.Small}" ItemsSource="{Binding ConverterCategorys}" hc:InfoElement.Title="转换器分组"  SelectedItem="{Binding ConverterCategory}"></ComboBox>
                                    <ComboBox  Style="{StaticResource ComboBoxExtend.Small}" HorizontalContentAlignment="Stretch" ItemsSource="{Binding ConverterDefinitions}" hc:InfoElement.Title="转换器" SelectedValue="{Binding ConverterName}" SelectedValuePath="Name" DisplayMemberPath="DisplayName"></ComboBox>
                                    <ComboBox  Style="{StaticResource ComboBoxExtend.Small}" HorizontalContentAlignment="Stretch" ItemsSource="{Binding InputKeys}" hc:InfoElement.Title="属性" SelectedValue="{Binding InputKey}" SelectedValuePath="Value" DisplayMemberPath="Name"></ComboBox>

                                </StackPanel>
                                <ItemsControl ItemsSource="{Binding AllInputs}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <controls:FlowInputView FlowInput="{Binding .}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>自定义检查项</TextBlock>
                    <Button Command="{Binding AddCheckerCommand}" Style="{StaticResource ButtonInfo.Small}">添加</Button>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding Model.Checkers}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button  Command="{Binding DataContext.RemoveCheckerCommand,ElementName=page}" CommandParameter="{Binding .}" HorizontalAlignment="Left" Style="{StaticResource ButtonDanger.Small}">删除</Button>
                                <controls:FlowInputView FlowInput="{Binding .}" EditMode="True"></controls:FlowInputView>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>执行条件</TextBlock>
                    <Button Command="{Binding LoadIfCommand}" Style="{StaticResource ButtonInfo.Small}">载入</Button>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding Model.Ifs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding Enable}"></CheckBox>
                                <CheckBox Visibility="{Binding Enable,Converter={StaticResource Boolean2VisibilityConverter}}" Content="符合" IsChecked="{Binding IsTrue}"></CheckBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
        <StackPanel HorizontalAlignment="Center" Margin="10" Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2">
            <Button Style="{StaticResource ButtonSuccess}" Margin="10,0">保存</Button>
            <Button Margin="10,0">取消</Button>
        </StackPanel>
    </Grid>
</rxui:ReactiveUserControl>
