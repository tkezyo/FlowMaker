<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                xmlns:vms="clr-namespace:FlowMaker.ViewModels;assembly=FlowMaker.UIBase"
                          xmlns:converters="clr-namespace:FlowMaker.Converters"
              xmlns:rxui="http://reactiveui.net"
                          x:Name="page"
			        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
                            xmlns:s="clr-namespace:System;assembly=mscorlib"
  xmlns:app="clr-namespace:Ty;assembly=Ty.AvaloniaBase"
             x:Class="FlowMaker.FlowMakerDebugView">
	<UserControl.Resources>
		<converters:CountToVisibilityReConverter x:Key="CountToVisibilityReConverter" />
		<converters:MonitorDebugConverter x:Key="MonitorDebugConverter" />
	</UserControl.Resources>
	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<ProgressBar
		 Height="20" Width="20"
		 Maximum="100"
		 Minimum="0"
		 Theme="{DynamicResource ProgressRing}"
		 Value="{Binding Model.Percent}"
		 ShowProgressText="True"/>
			<TextBlock Text="{Binding Model.DisplayName}"  VerticalAlignment="Center" Margin="4,0" />
			<Button Content="运行" Command="{Binding RunCommand}"   IsVisible="{Binding !Model.Running}"/>

			<Button Content="停止" Command="{Binding StopCommand}"  IsVisible="{Binding Model.Running}" />
			<Button Content="删除" Command="{Binding RemoveCommand}"  IsVisible="{Binding !Model.Running}"/>


			<Separator Margin="10,0"/>
			<CheckBox Content="事件"  x:Name="eventCB"/>

			<CheckBox Content="编辑"  x:Name="edit"/>

		</StackPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal"
			IsVisible="{Binding IsChecked,ElementName=eventCB}" >
			<Button Content="发送事件" Command="{Binding DataContext.SendEventCommand,ElementName=page}"  />
			<TextBlock Text="名称:" VerticalAlignment="Center" Margin="4,0"/>
			<TextBox Text="{Binding Model.EventName}"   MinWidth="80"/>
			<TextBlock Text="数据:" VerticalAlignment="Center" Margin="4,0"/>
			<TextBox Text="{Binding Model.EventData}"   MinWidth="80"/>

		</StackPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal"
				IsVisible="{Binding IsChecked,ElementName=edit}" >
			<Button Content="保存" Command="{Binding DataContext.SaveConfigCommand,ElementName=page}" />
			<TextBlock Text="重复:" VerticalAlignment="Center" Margin="4,0"/>
			<TextBox Text="{Binding Model.Repeat}"  />
			<TextBlock Text="重试:" VerticalAlignment="Center" Margin="4,0"/>
			<TextBox Text="{Binding Model.Retry}" />
			<TextBlock Text="超时:" VerticalAlignment="Center" Margin="4,0"/>
			<TextBox Text="{Binding Model.Timeout}" />
			<TextBlock Text="错误处理:" VerticalAlignment="Center" Margin="4,0"/>
			<ComboBox ItemsSource="{Binding DataContext.ErrorHandlings,ElementName=page}"  SelectedItem="{Binding Model.ErrorHandling}" />
			<TextBlock Text="自定义日志:" VerticalAlignment="Center" Margin="4,0"/>
			<ComboBox ItemsSource="{Binding CustomLogs}"  SelectedItem="{Binding Model.LogView}"></ComboBox>
			<Separator Margin="10,0"/>

			<ItemsControl ItemsSource="{Binding Model.Middlewares}"
						  Grid.Row="5"  Grid.ColumnSpan="2" Margin="0,5">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<CheckBox Content="{Binding Name}" IsChecked="{Binding Selected,Mode=TwoWay}"/>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<Separator Margin="10,0"/>

			<ItemsControl ItemsSource="{Binding Model.Data}"
						  VerticalAlignment="Center">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" Margin="4,0"/>
							<TextBox  MinWidth="50"  Text="{Binding Value}"  IsVisible="{Binding !HasOption}"/>
							<ComboBox   ItemsSource="{Binding Options}" SelectedValue="{Binding Value}" IsVisible="{Binding HasOption}" SelectedValueBinding="{Binding Name}" DisplayMemberBinding="{Binding DisplayName}"/>
						</StackPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

		</StackPanel>

		<rxui:RoutedViewHost DockPanel.Dock="Bottom"
   IsVisible="{Binding Model.ShowView}"
   Router="{Binding Model.Router}">
			<rxui:RoutedViewHost.DefaultContent>
				<WrapPanel>
				</WrapPanel>
			</rxui:RoutedViewHost.DefaultContent>
			<rxui:RoutedViewHost.ViewLocator>
				<app:AppViewLocator />
			</rxui:RoutedViewHost.ViewLocator>
		</rxui:RoutedViewHost>

		<ScrollViewer>
			<StackPanel>

				<TreeView ItemsSource="{Binding Model.Steps}">
					<TreeView.DataTemplates>
						<TreeDataTemplate
                              ItemsSource="{Binding Steps}"
                              DataType="vms:MonitorStepInfoViewModel">
							<StackPanel Orientation="Horizontal">
								<Button
Width="15" Height="15" Margin="3" CornerRadius="10" Content="">
									<Button.CommandParameter>
										<MultiBinding Converter="{StaticResource MonitorDebugConverter}">
											<Binding Path="DataContext.Model" ElementName="page"/>
											<Binding Path="."/>
										</MultiBinding>
									</Button.CommandParameter>
									<i:Interaction.Behaviors>
										<ia:DataTriggerBehavior Binding="{Binding Debugging}"
																ComparisonCondition="Equal">
											<ia:DataTriggerBehavior.Value>
												<s:Boolean>True</s:Boolean>
											</ia:DataTriggerBehavior.Value>
											<ia:ChangePropertyAction PropertyName="Background" Value="Orange" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding IsDebug}"
															ComparisonCondition="Equal">
											<ia:DataTriggerBehavior.Value>
												<s:Boolean>True</s:Boolean>
											</ia:DataTriggerBehavior.Value>
											<ia:ChangePropertyAction PropertyName="BorderBrush" Value="Red" />
											<ia:ChangePropertyAction PropertyName="BorderThickness" Value="3" />
											<ia:ChangePropertyAction PropertyName="Command" Value="{Binding DataContext.RemoveDebugCommand,ElementName=page}" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding IsDebug}"
														ComparisonCondition="Equal">
											<ia:DataTriggerBehavior.Value>
												<s:Boolean>False</s:Boolean>
											</ia:DataTriggerBehavior.Value>
											<ia:ChangePropertyAction PropertyName="Command" Value="{Binding DataContext.AddDebugCommand,ElementName=page}" />
										</ia:DataTriggerBehavior>
									</i:Interaction.Behaviors>
								</Button>
								<TextBlock Margin="10,0" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
								<TextBlock Text="{Binding UsedTime, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}" VerticalAlignment="Center"/>
							</StackPanel>
						</TreeDataTemplate>
					</TreeView.DataTemplates>
				</TreeView>
			</StackPanel>

		</ScrollViewer>
	</DockPanel>
</UserControl>
